{
    "title": "Emacs Mode",
    "rules": [

        <%# -------------------------------------------------- %>
        <%# Cursor Move / Page Scroll                          %>
        <%# -------------------------------------------------- %>

        {
            "description": "[Emacs Mode] Control+PNBF to Up/Down/Left/Right",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# for Mark Set                                       %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("b", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("f", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("n", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["down_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("p", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["up_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# for Normal                                         %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("b", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("f", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("n", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["down_arrow"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("p", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["up_arrow"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }

            ]
        },
        {
            "description": "[Emacs Mode] Control+AE to Command+Left/Right",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# for Mark Set                                       %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("a", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow", ["left_shift", "left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("e", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_shift", "left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# for Normal                                         %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("a", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("e", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }

            ]
        },
        {
            "description": "[Emacs Mode] Control+V to PageDown",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# for Mark Set                                       %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("v", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["page_down", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# for Normal                                         %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("v", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["page_down"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }

            ]
        },
        {
            "description": "[Emacs Mode] Option+V to PageUp",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# for Mark Set                                       %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("v", ["option"], ["caps_lock"]) %>,
                    "to": <%= to([["page_up", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# for Normal                                         %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("v", ["option"], ["caps_lock"]) %>,
                    "to": <%= to([["page_up"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Command+V to PageUp",
            "manipulators": [

                <%# -------------------------------------------------- %>
                <%# for Mark Set                                       %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("v", ["command"], ["caps_lock"]) %>,
                    "to": <%= to([["page_up", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# for Normal                                         %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("v", ["command"], ["caps_lock"]) %>,
                    "to": <%= to([["page_up"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }

            ]
        },

        <%# -------------------------------------------------- %>
        <%# Cut & Paste / Undo                                 %>
        <%# -------------------------------------------------- %>

        {
            "description": "[Emacs Mode] Control+W to Command+X",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("w", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["x", ["left_command"]]]) %>,
                    "to_after_key_up": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Option+W to Command+C",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("w", ["option"], ["caps_lock"]) %>,
                    "to": <%= to([["c", ["left_command"]]]) %>,
                    "to_after_key_up": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Command+W to Command+C",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("w", ["command"], ["caps_lock"]) %>,
                    "to": <%= to([["c", ["left_command"]]]) %>,
                    "to_after_key_up": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Control+Y to Command+V",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("y", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["v", ["left_command"]]]) %>,
                    "to_after_key_up": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Control+/ to Command+Z",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("slash", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["z", ["left_command"]]]) %>,
                    "to_after_key_up": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Control+K to Command+Shift+Right,Command+X",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("k", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_command", "left_shift"]], ["x", ["left_command"]]]) %>,
                    "to_after_key_up": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Control+K to Command+Shift+Right,Forward Delete",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("k", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_command", "left_shift"]], ["delete_forward"]]) %>,
                    "to_after_key_up": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },


        <%# -------------------------------------------------- %>
        <%# Edit                                               %>
        <%# -------------------------------------------------- %>

        {
            "description": "[Emacs Mode] Control+D to Forward Delete",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("d", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["delete_forward"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Control+H to Delete",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("h", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["delete_or_backspace"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Control+[ to Escape",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("open_bracket", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["escape"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Control+M to Return",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("m", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["return_or_enter"]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },

        <%# -------------------------------------------------- %>
        <%# Find                                               %>
        <%# -------------------------------------------------- %>

        {
            "description": "[Emacs Mode] Control+S to Command+F",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("s", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["f", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 }
                    ]
                }
            ]
        },

        <%# -------------------------------------------------- %>
        <%# C-x Prefix                                         %>
        <%# -------------------------------------------------- %>

        {
            "description": "[Emacs Mode|C-x] C-s to Save (Command+S)",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("s", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["s", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode|C-x] C-f to Open (Command+O)",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("f", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["o", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode|C-x] u to Undo (Command+Z)",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("u", [], ["caps_lock"]) %>,
                    "to": <%= to([["z", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode|C-x] k to Close (Command+W)",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("k", [], ["caps_lock"]) %>,
                    "to": <%= to([["w", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode|C-x] C-c to Quit (Command+Q)",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("c", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["q", ["left_command"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 1 }
                    ]
                }
            ]
        },
        {
            "description": "[Emacs Mode] Enable Control+X as prefix key",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("x", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["x", ["left_control"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("x", ["control"], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "emacs_mode_cx", "value": 1 } }
                    ],
                    "to_delayed_action": {
                        "to_if_invoked": [
                            { "set_variable": { "name": "emacs_mode_cx", "value": 0 } }
                        ],
                        "to_if_canceled": [
                            { "set_variable": { "name": "emacs_mode_cx", "value": 0 } }
                        ]
                    },
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 0 }
                    ]
                }
            ]
        },

        <%# -------------------------------------------------- %>
        <%# Mark Set                                           %>
        <%# -------------------------------------------------- %>

        {
            "description": "[Emacs Mode] Enable Control+Space as Mark Set",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("spacebar", ["control"], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 1 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 0 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("spacebar", ["control"], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "emacs_mode_cx", "value": 0 } },
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# Exit from Mark Set Mode                            %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("g", ["control"], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("escape", [], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("delete_or_backspace", [], ["caps_lock"]) %>,
                    "to": [
                        { "set_variable": { "name": "emacs_mode_markset", "value": 0 } }
                    ],
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_cx", "value": 0 },
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# Cursor Move                                        %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("left_arrow", [], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("right_arrow", [], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("down_arrow", [], ["caps_lock"]) %>,
                    "to": <%= to([["down_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("up_arrow", [], ["caps_lock"]) %>,
                    "to": <%= to([["up_arrow", ["left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
 
                <%# -------------------------------------------------- %>
                <%# Cursor Move (with fn key)                          %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("left_arrow", ["fn"], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow", ["fn", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("right_arrow", ["fn"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["fn", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("down_arrow", ["fn"], ["caps_lock"]) %>,
                    "to": <%= to([["down_arrow", ["fn", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("up_arrow", ["fn"], ["caps_lock"]) %>,
                    "to": <%= to([["up_arrow", ["fn", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# Cursor Move (with Command key)                     %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("left_arrow", ["command"], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow", ["left_command", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("right_arrow", ["command"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_command", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("down_arrow", ["command"], ["caps_lock"]) %>,
                    "to": <%= to([["down_arrow", ["left_command", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("up_arrow", ["command"], ["caps_lock"]) %>,
                    "to": <%= to([["up_arrow", ["left_command", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },

                <%# -------------------------------------------------- %>
                <%# Cursor Move (with Option key)                      %>
                <%# -------------------------------------------------- %>

                {
                    "type": "basic",
                    "from": <%= from("left_arrow", ["option"], ["caps_lock"]) %>,
                    "to": <%= to([["left_arrow", ["left_option", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                },
                {
                    "type": "basic",
                    "from": <%= from("right_arrow", ["option"], ["caps_lock"]) %>,
                    "to": <%= to([["right_arrow", ["left_option", "left_shift"]]]) %>,
                    "conditions": [
                        <%= frontmost_application_unless("emacs_mode_key_bindings_exception") %>,
                        { "type": "variable_if", "name": "emacs_mode_markset", "value": 1 }
                    ]
                }

            ]
        }
    ]
}
